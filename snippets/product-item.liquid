{% comment %}
    Loop through our products in the current collection.
    See the snippet 'product-grid-item' for the layout.
{% endcomment %}
{% for product in collection.products %}


    {% assign on_sale = false %}
    {% if product.compare_at_price > product.price %}
        {% assign on_sale = true %}
    {% endif %}

    {% comment %}
        Check if the product is sold out and set a variable to be used below.
    {% endcomment %}
    {% assign sold_out = true %}
    {% if product.available %}
        {% assign sold_out = false %}
    {% endif %}



    {% comment %}
    Link to your product with the 'within: collection' filter for the link to be aware of the collection.
    This allows you to create collection-based navigation on the product page.

    Results of using 'within: collection':
    - Instead of a URL with /products/product-handle
    you would get /collections/collection-handle/products/product-handle

    For more info on navigation within a collection
    - http://docs.shopify.com/support/your-store/collections/how-to-navigate-within-a-collection

    {% endcomment %}
    <article class="ProductItem">
        <a href="{{ product.url | within: collection }}" class="ProductItem-stage">
            <img class="ProductItem-img" src="{{ product.featured_image.src | img_url: 'large' }}" alt="{{ product.featured_image.alt | escape }}">
        </a>

        <a class="ProductItem-caption" href="{{ product.url | within: collection }}">
            <h2 class="ProductItem-title">{{ product.title }}</h2>
            {% comment %}
            You can show a leading 'from' or 'up to' by checking 'product.price_varies'
            if your variants have different prices.
            {% endcomment %}
            {% if on_sale %}
            {% if product.price_varies %}
                <strong class="ProductItem-price">{% assign sale_price = product.price | money %}</strong>
            {{ 'products.product.on_sale_from_html' | t: price: sale_price }}
            {% else %}
                <strong class="ProductItem-subtitle">{{ 'products.product.on_sale' | t }}</strong>
                <strong class="ProductItem-price">{{ product.price | money }}</strong>
            {% endif %}
            {% else %}
            {% if product.price_varies %}
                {% assign price = product.price | money %}
                <strong class="ProductItem-subtitle">{{ 'products.general.from_text_html' | t: price: price }}</strong>
            {% else %}
                <strong class="ProductItem-price">{{ product.price | money }}</strong>
            {% endif %}
            {% endif %}

            {% if sold_out %}
            <strong class="ProductItem-subtitle">{{ 'products.product.sold_out' | t }}</strong>
            {% endif %}
            {% if on_sale %}
            <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
            {{ product.compare_at_price | money }}
            {% endif %}
        </a>

    </article>
    {% else %}

    {% if collection.handle == 'all' and current_tags == '' %}
    {% comment %}
      Add default products to help with onboarding for collections/all only
    {% endcomment %}
    {% include 'onboarding-empty-collection' %}
    {% else %}
    {% comment %}
    If collection exists but is empty, display message
    {% endcomment %}
    <p class="ProductItem-caption">{{ 'collections.general.no_matches' | t }}</p>
    {% endif %}
{% endfor %}
