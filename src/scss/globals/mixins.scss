@mixin media($size) {
    @if ($size == small) {
      @media (min-width: $screen-sm) {
        @content;
      }
    }
    @if ($size == medium) {
        @media (min-width: $screen-md) {
            @content;
        }
    }
}


// =======================================
// GRID CREATOR
// =======================================
// The grid-creator mixin automatically creates CSS grid classes in the form of:
//
//   parentclass*--1of2 {
//   width: calc(50% - *gap*);
// }
//
// It takes two arguments:
//   $column-count:   the amount of columns generated
//   $gap:            the width of the gap between the columns
//
// =======================================
//@mixin grid-creator ($column-count, $gap) {
//  // Loop through all columns
//  @for $current-column from 1 to $column-count + 1 {
//    // Loop through the parts of the column (1of4, 2of4, etc.)
//    @for $current-column-part from 1 to $current-column + 1 {
//      // '&--' is used to attach the parent class to the created modifier
//      &--#{$current-column-part}of#{$current-column} {
//        $column-width: ((100% / $current-column) * $current-column-part);
//        // full width columns don't need gaps
//        @if $current-column > 1 {
//          $column-gap: $gap / 2;
//        }
//        @else {
//          $column-gap: 0px;
//        }
//        width: calc(#{$column-width} - #{$column-gap});
//        padding: ($gap / 4);
//      }
//    }
//  }
//}
