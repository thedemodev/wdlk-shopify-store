{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

{% comment %}
  Theme background switcher based on the themeLight Tag
  {% endcomment %}

{% assign themeLight = '' %}
{% for tag in product.tags %}
  {% if tag contains 'themeLight' %}
    {% assign themeLight = 'Product--themeLight' %}
  {% endif %}
{% endfor %}
<main class="Product ProductPage {{ themeLight}}" itemscope itemtype="http://schema.org/Product">
    {% comment %} Get first variant, or deep linked one{% endcomment %}
    <article class="Product-display">
        <div class="Product-images">
        <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
        {% assign current_variant = product.selected_or_first_available_variant %}
        {% comment %} CSS only Carousel {% endcomment %}
        <figure class="Carousel">
            {% comment %} MAIN IMAGE {% endcomment %}
            {% assign screen-md = '770px' %}
            {% assign screen-sm = '480px' %}
            {% assign screen-l = '1024px' %}
            {% assign max-thumbnails = 4 %}
            {% for image in product.images %}
                {% comment %}
                    Assign variables to limit the thumbnails
                    min and max amount.
                {% endcomment %}
                {% if forloop.length <= 5 %}
                    {% assign main-images-amount = 3 %}
                {% else %}
                    {% assign main-images-amount = 4 %}
                {% endif %}
                {% comment %}
                    Defines the boolean condition values or offsets for
                    the products teaser images display.
                {% endcomment %}
                {% assign last-index = forloop.length | minus: 1 %}
                {% assign nexto-last-index = forloop.length | minus: 2 %}
            {% endfor %}
            {% for image in product.images limit: main-images-amount %}
                {% comment %} The first input radio for the carousel must be checked {% endcomment %}
                {% if forloop.first == true   %}
                    {% assign isChecked = 'checked' %}
                {% else %}
                    {% assign isChecked = '' %}
                {% endif %}
                <input class="Carousel-trigger" type="radio" name="carousel--product" value="{{forloop.index}}" id="carousel--product-{{forloop.index}}" {{isChecked}}>
                <div class="Carousel-item" itemprop="image">
                    {% comment %}
                        Sizes attribute: if not defined it asumes that the image is 100 vw. In this case we are saying: If the browser window is wider than 1024px  , this image is probably going to be displayed about half the size of that. If it's smaller, it'll probably be full-width.
                    {% endcomment %}
                    <img class="Carousel-img"
                    sizes="(min-width: {{screen-l}}) 50vw, 100vw"
                    srcset="{{ image.src | product_img_url: 'large' }} 480w,
                            {{ image.src | product_img_url: 'grande' }} 600w,
                            {{ image.src | product_img_url: '1024x1024' }} 1024w"
                    src="{{ image.src | product_img_url: 'grande' }}"
                    alt="{{ product.image.alt | escape }}" itemprop="image" />
                </div>

                <label class="Carousel-btn" for="carousel--product-{{forloop.index }}">
                    <svg class="Icon">
                        <use xlink:href="#Arrow_left" />
                    </svg>
                </label>

                {% comment %}
                {% if product.images.size > 2 %}
                    {% if forloop.last == true %}
                        <label class="Carousel-trigger Carousel-trigger--label" for="carousel--product-1">
                            <svg class="Icon">
                                <use xlink:href="#Arrow_right" />
                            </svg>
                        </label>
                    {% endif %}
                {% endif %}
                {% endcomment %}
            {% endfor %}

            {% if product.images.size > 1 %}
            {% comment %} THUMBNAILS {% endcomment %}
                <div class="Thumbnails">
                    {% for image in product.images limit: main-images-amount %}
                    <label class="Thumbnails-item" for="carousel--product-{{forloop.index}}">
                        <img class="Thumbnails-img" src="{{ image.src | img_url: 'thumg' }}" alt="{{ image.alt | escape }}">
                    </label>
                    {% endfor %}
                </div>
                {% comment %} Indicators {% endcomment %}
                <div class="Indicators">
                    {% for image in product.images limit: main-images-amount %}
                    <label class="Indicators-item" for="carousel--product-{{forloop.index}}"></label>
                    {% endfor %}
                </div>
                {% endif %}
            </figure>
        </div>

        <div class="Product-detail">
            <h1 class="Headline Headline--2 Product-headline" itemprop="name">{{ product.title }}</h1>
            <strong class="Headline Headline--3" itemprop="price">{{ product.price | money_with_currency }}</strong>
            {% if product.compare_at_price_max > product.price %}
            <strong class="visually-hidden">{{ 'products.general.sale_price' | t }}</strong>
            <p id="ComparePrice">
                {{ 'products.product.compare_at' | t }} {{ current_variant.compare_at_price | money }}
            </p>
            {% endif %}
            <small class="Copy-sm">({{'products.product.tax_type' | t}} {{'products.product.tax_included' | t}})</small>

            <p itemprop="description">
                {{ product.description }}
            </p>

            {% comment %}
                LIGHTBOX
                Verify if the product contains a Size variant
                in order to display the sizing chart lightbox.
            {% endcomment %}
            {% assign SizeOption = 'Size'  %}
            {% for option in product.options %}
                {% if option == SizeOption %}
                <label class="Link" for="lightbox">
                    {{'products.product.label_size_chart' | t}}
                </label>
                {% else %}
                    {% break %}
                {% endif %}
            {% endfor %}
            {% comment %}END LIGHTBOX{% endcomment %}

            {% comment %}
            ID addToCartForm is a selector for the ajax cart plugin
            {% endcomment %}
            <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" class="Product-actionRow js_fbqAddToCart" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                <meta itemprop="priceCurrency" content="{{ shop.currency }}" />
                <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}" />

                {% comment %}
                Add product variants as a dropdown.
                - By default, each variant (or combination of variants) will display as its own <option>
                - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

                You can leverage jQuery to add a callback on page load and each time the select element changes:
                - Include option_selection.js (as seen at the bottom of this file)
                - This allows you to use JavaScript anytime the variant dropdown changes
                - This also separates out your variant options (ie. size, color, etc.) to separate select elements

                For more information on products with multiple options, visit:
                - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid
                {% endcomment %}

                {% assign hide_default_title = false %}
                {% if product.variants.size == 1 and product.variants.first.title contains 'Default Title' %}
                    {% assign hide_default_title = true %}
                {% endif %}

                <select name="id" class="Select js_fbqSelect {% if hide_default_title %}is-hidden{% endif %}">
                    {% for variant in product.variants %}
                    {% if variant.available %}

                    {% comment %}
                    Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
                    {% endcomment %}
                    {% comment %}
                    <option data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }}</option>

                    {% endcomment %}
                    <option
                    {% if variant == product.selected_or_first_available_variant %} selected="selected"
                    {% endif %} data-sku="{{ variant.sku }}" value="{{ variant.id }}">{{ variant.title }}</option>

                    {% else %}
                    <option disabled="disabled">
                        {{ variant.title }} - {{ 'products.product.sold_out' | t }}
                    </option>
                    {% endif %}
                    {% endfor %}
                </select>
                {% assign numberMin = '1' %}
                {% assign numberId = 'quantity' %}
                {% assign numberName = numberId %}
                {% assign numberValue = 1 %}
                {% include 'number-input' %}


                <button type="submit" name="add"
                    class="Btn js_fbqBtn"
                    data-name="{{ product.title }}"
                    data-id="{{ product.selected_variant.id }}"
                    data-value="{{ product.price | divided_by: 100 }}">
                    {{ 'products.product.add_to_cart' | t }}
                </button>
            </form>
        </div>

    </article>
    <aside class="Product-teasers">
        {% comment %}
        Starts the image loop at the 4th item and
        breaks after the second iteration
        {% endcomment %}
        {% for image in product.images offset: nexto-last-index %}
        {% if forloop.index >= 2 %}
        {% break %}
        {% else %}
        <div class="Product-teaser-imgContainer" style="background-image: url({{ image.src | product_img_url: 'grande' }});">
            <img sizes="(min-width: {{screen-l}}) 50vw, 100vw"
                srcset="{{ image.src | product_img_url: 'large' }} 480w,
                        {{ image.src | product_img_url: 'grande' }} 600w,
                        {{ image.src | product_img_url: '1024x1024' }} 1024w"
                src="{{ image.src | product_img_url: 'grande' }}"
                alt="{{ product.image.alt | escape }}"
                class="Product-teaser-img" itemprop="image" />
        </div>
        {% endif %}
        {% endfor %}
        <div class="Product-teaser-description">
            <h2 class="Headline Headline--2">{{'products.product.features' | t}}</h2>
            <h3 class="Headline Headline--4">{{ product.type }}</h3>
            {% assign productFeatures = product.metafields.product %}
            {{ productFeatures['Product Features'] }}

            {% assign productFit = product.metafields.product %}
            {% if productFit['Product Fit & Guide'] %}
                <h3 class="Headline Headline--4">
                    {% if product.type == 'Tops' %}
                        {{'products.product.fit_guide' | t}}
                        {% else %}
                        {{'products.product.fit_coverage_guide' | t}}
                    {% endif %}
                </h3>
                {{ productFit['Product Fit & Guide'] }}
            {% endif %}

            <h3 class="Headline Headline--4">{{'products.product.marine_protection' | t}}</h3>
            {% assign marineProtectionList = shop.metafields.product %}
            {{ marineProtectionList['Marine Protection'] }}
        </div>
        <div class="Product-teaser-description">
            <h2 class="Headline Headline--2">{{'products.product.material' | t}}</h2>
            {% comment %}
                Render different descriptions for bikinis
                or for pouches
            {% endcomment %}
            {% if product.type == 'Pouch' %}
                {% assign materialProps = product.metafields.product %}

                {% if materialProps['Material Description'] %}
                    {{ materialProps['Material Description'] }}
                {% endif %}

                {% if materialProps['Material Composition'] %}
                    <h3 class="Headline Headline--4">{{'products.product.composition' | t }}</h3>
                    {{ materialProps['Material Composition'] }}
                {% endif %}

                {% if materialProps['Material Properties'] %}
                    <h3 class="Headline Headline--4">{{'products.product.material_features' | t }}</h3>
                    {{ materialProps['Material Properties'] }}
                {% endif %}

            {% else %}
                {% comment %}
                    Here is the description for the swimwear
                {% endcomment %}
                {% assign fabricDescription = shop.metafields.product %}
                {{ fabricDescription['Fabric Description'] }}
                <h3 class="Headline Headline--4">{{'products.product.composition' | t}}</h3>
                {% assign fabricComposition = shop.metafields.product %}
                {{ fabricComposition['Fabric Composition'] }}

                <h3 class="Headline Headline--4">{{'products.product.fabric_features' | t}}</h3>
                {% assign fabricProperties = shop.metafields.product %}
                {{ fabricProperties['Fabric Properties'] }}
            {% endif %}
        </div>
        {% comment %}
        Starts the image loop at the 5th item and
        breaks after the second iteration
        {% endcomment %}
        {% for image in product.images offset: last-teaser-offset %}
        {% if forloop.last == true %}
            <div class="Product-teaser-imgContainer" style="background-image: url({{ image.src | product_img_url: 'grande' }});">
                <img sizes="(min-width: {{screen-l}}) 50vw, 100vw"
                srcset="{{ image.src | product_img_url: 'large' }} 480w,
                {{ image.src | product_img_url: 'grande' }} 600w,
                {{ image.src | product_img_url: '1024x1024' }} 1024w"
                src="{{ image.src | product_img_url: 'grande' }}"
                alt="{{ product.image.alt | escape }}"
                class="Product-teaser-img" itemprop="image" />
            </div>
        {% endif %}
        {% endfor %}
    </aside>
</main>
{% comment %}
  LIGHTBOX: FOR THE SIZE CHART
{% endcomment %}
{% include 'sizing-guide' %}
{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{% comment %}
  LIGHTBOX: FOR THE SIZE CHART

{{ 'option_selection.js' | shopify_asset_url | script_tag }}
<script>
  var selectCallback = function(variant, selector) {
    timber.productPage({
      money_format: "{{ shop.money_format }}",
      variant: variant,
      selector: selector
    });
  };

  (function($) {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
{% endcomment %}
